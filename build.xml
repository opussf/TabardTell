<project name="TabardTell" default="package">

	<tstamp/>
	<property file="build.properties"/>
	<property environment="env"/>

	<property name="env.BUILD_NUMBER" value="LOCAL"/>
	<property name="build.number" value="${env.BUILD_NUMBER}"/>
	<property name="version.number" value="${IN.version}.${build.number}"/>
	<property name="project.zip" value="${ant.project.name}_${version.number}.zip"/>
	<property name="test.dir" location="test"/>

	<property name="target.dir" location="target"/>
	<property name="working.dir" location="${target.dir}/working"/>
	<property name="report.dir" location="${target.dir}/reports"/>

	<condition property="test.check">
		<available file="${test.dir}/test.lua" type="file"/>
	</condition>

	<target name="clean" description="Cleans old builds">
		<delete dir="target" verbose="true"/>
	</target>


	<target name="changelog" description="Creates a changelog">
		<mkdir dir="${working.dir}"/>
		<exec executable="git" dir=".">
			<arg line="log --graph --pretty=format:'%h %ci - %d %s &lt;%an&gt;' master.."/>
			<redirector output="${working.dir}/changelog.txt"/>
		</exec>
	</target>

	<target name="package" depends="changelog, test" description="Create a deploy package">
		<property name="package.dir" location="${working.dir}/${ant.project.name}"/>
		<copy	todir="${package.dir}">
			<fileset dir="src">
				<include name="*.lua"/>
				<include name="*.toc"/>
				<include name="*.xml"/>
				<include name="*.txt"/>
			</fileset>
			<fileset dir="${working.dir}">
				<include name="*.txt"/>
			</fileset>
			<filterset>
				<filter token="VERSION" value="${version.number}"/>
			</filterset>
		</copy>
		<zip 	destfile="${target.dir}/${project.zip}"
				basedir="${working.dir}"
				includes="${ant.project.name}/**"/>
		<delete dir="${package.dir}" verbose="false"/>
		<checksum file="${target.dir}/${project.zip}"
				  property="zip.md5" />
		<echo message="${zip.md5}" />

	</target>

	<target name="wow" depends="" description="copy files to currnet wow install">
		<property name="addon.dir" location="${addon.dir.base}/${ant.project.name}"/>
		<mkdir dir="${addon.dir}"/>
		<copy todir="${addon.dir}">
			<fileset dir="src">
				<include name="*.lua"/>
				<include name="*.toc"/>
				<include name="*.xml"/>
				<include name="Readme.txt"/>
			</fileset>
			<filterset>
				<filter token="VERSION" value="${version.number}"/>
			</filterset>
		</copy>
	</target>

	<target name="test" description="run unit tests" if="test.check">
		<mkdir dir="dest"/>
		<exec executable="lua" dir="test">
			<arg value="test.lua"/>
		</exec>
	</target>

	<target name="deploy" depends="deploy.check" description="deploys the file" if="deploy.run">
		<copy todir="${deploy.dir}">
			<fileset dir="${deploy.from}">
				<include name="*.zip"/>
			</fileset>
		</copy>
	</target>

	<target name="deploy.check">
		<condition property="deploy.run">
			<and>
				<available file="${deploy.from}" type="dir"/>
				<available file="${deploy.dir}" type="dir"/>
			</and>
		</condition>
	</target>

</project>
